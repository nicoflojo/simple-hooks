{"ast":null,"code":"import _slicedToArray from \"/Users/Nico/ReactCourse/hooks-simple/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Nico/ReactCourse/hooks-simple/src/components/ResourceList.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useResources = resources => {\n  ;\n};\n\nconst ResourceList = ({\n  resource\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        resources = _useState2[0],\n        setResources = _useState2[1];\n\n  const fetchResource = async resource => {\n    const response = await axios.get(\"https://jsonplaceholder.typicode.com/\".concat(resource));\n    setResources(response.data);\n  };\n\n  useEffect(() => {\n    (async resource => {\n      const response = await axios.get(\"https://jsonplaceholder.typicode.com/\".concat(resource));\n      setResources(response.data);\n    })(resource);\n  }, [resource]);\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, resources.map(record => React.createElement(\"li\", {\n    key: record.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, record.title)));\n};\n\nexport default ResourceList;","map":{"version":3,"sources":["/Users/Nico/ReactCourse/hooks-simple/src/components/ResourceList.js"],"names":["React","useState","useEffect","axios","useResources","resources","ResourceList","resource","setResources","fetchResource","response","get","data","map","record","id","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAIC,SAAD,IAAe;AAEpC;AAAE,CAFF;;AAIA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA,oBACJN,QAAQ,CAAC,EAAD,CADJ;AAAA;AAAA,QAC/BI,SAD+B;AAAA,QACpBG,YADoB;;AAGrC,QAAMC,aAAa,GAAG,MAAOF,QAAP,IAAoB;AACxC,UAAMG,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,gDAAkDJ,QAAlD,EAAvB;AAEAC,IAAAA,YAAY,CAACE,QAAQ,CAACE,IAAV,CAAZ;AACD,GAJD;;AAMAV,EAAAA,SAAS,CACP,MAAM;AACJ,KAAC,MAAOK,QAAP,IAAoB;AACnB,YAAMG,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,gDAAkDJ,QAAlD,EAAvB;AAEAC,MAAAA,YAAY,CAACE,QAAQ,CAACE,IAAV,CAAZ;AACD,KAJD,EAIGL,QAJH;AAKH,GAPQ,EAON,CAACA,QAAD,CAPM,CAAT;AASA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,SAAS,CAACQ,GAAV,CAAcC,MAAM,IACnB;AAAI,IAAA,GAAG,EAAEA,MAAM,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBD,MAAM,CAACE,KAA5B,CADD,CADH,CADF;AAOD,CAzBD;;AA2BA,eAAeV,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useResources = (resources) => {\n\n;}\n\nconst ResourceList = ({ resource }) => {\n const [resources, setResources] = useState([]);\n \n  const fetchResource = async (resource) => {\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/${resource}`);\n\n    setResources(response.data);\n  };\n\n  useEffect(\n    () => {\n      (async (resource) => {\n        const response = await axios.get(`https://jsonplaceholder.typicode.com/${resource}`);\n    \n        setResources(response.data);\n      })(resource);\n  }, [resource]);\n  \n  return (\n    <ul>\n      {resources.map(record => ( \n        <li key={record.id}>{record.title}</li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ResourceList;"]},"metadata":{},"sourceType":"module"}